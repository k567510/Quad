/* YourDuinoStarter Example: nRF24L01 Receive Joystick values

 - WHAT IT DOES: Receives data from another transceiver with
   2 Analog values from a Joystick or 2 Potentiometers
   Displays received values on Serial Monitor
 - SEE the comments after "//" on each line below
 - CONNECTIONS: nRF24L01 Modules See:
 http://arduino-info.wikispaces.com/Nrf24L01-2.4GHz-HowTo
   1 - GND
   2 - VCC 3.3V !!! NOT 5V
   3 - CE to Arduino pin 9
   4 - CSN to Arduino pin 53
   5 - SCK to Arduino pin 52
   6 - MOSI to Arduino pin 51
   7 - MISO to Arduino pin 50
   8 - UNUSED
   
 - V1.00 11/26/13
   Based on examples at http://www.bajdi.com/
   Questions: terry@yourduino.com */

/*-----( Import needed libraries )-----*/
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include "printf.h"
#include "Output.h"
/*-----( Declare Constants and Pin Numbers )-----*/
#define CE_PIN  9
#define CSN_PIN 53

// NOTE: the "LL" at the end of the constant is "LongLong" type
const uint64_t pipe = 0xE8E8F0F0E1LL; // Define the transmit pipe


/*-----( Declare objects )-----*/
RF24 radio(CE_PIN, CSN_PIN); // Create a Radio
/*-----( Declare Variables )-----*/

int joystick[4];  // 4 element array holding Joystick readings
int servo_throttle,servo_yaw,servo_pitch,servo_roll;


void servoInitial()//output.cpp line 507
{
      pinMode(2,OUTPUT);
      pinMode(3,OUTPUT);
      pinMode(5,OUTPUT);
      pinMode(6,OUTPUT);
      // init 16bit timer 3
      TCCR3A |= (1<<WGM31); // phase correct mode
      TCCR3A &= ~(1<<WGM30);
      
      TCCR3B |= (1<<WGM33);
      TCCR3B &= ~(1<<CS31); // no prescaler
      
      ICR3   |= 0x3FFF; // TOP is set to 16383;  
          
      TCCR3A |= _BV(COM3C1); // connect pin 3 to timer 3 channel C
      TCCR3A |= _BV(COM3A1); // connect pin 5 to timer 3 channel A
      
      // init 16bit timer 4
      TCCR4A |= (1<<WGM41); // phase correct mode
      TCCR4A &= ~(1<<WGM40);
      TCCR4B |= (1<<WGM43);
      TCCR4B &= ~(1<<CS41); // no prescaler
      ICR4   |= 0x3FFF; // TOP to 16383;        
      TCCR4A |= _BV(COM4A1); // connect pin 6 to timer 4 channel A
      TCCR3A |= _BV(COM3B1); // connect pin 2 to timer 3 channel B //COM3B1 = 5.
}

void setup()   /****** SETUP: RUNS ONCE ******/
{
  Serial.begin(9600);
  printf_begin();
  Serial.println("Nrf24L01 Receiver Starting");
  radio.begin();
  radio.setDataRate(RF24_250KBPS);
  radio.openReadingPipe(1,pipe);
  radio.setAutoAck(false);
  radio.startListening();
  radio.printDetails();
  servoInitial();
}//--(end setup )---

void loop()   /****** LOOP: RUNS CONSTANTLY ******/
{
  int temp;
  if ( radio.available() ) //radio.available 不會更改status
  {
    Serial.println("available");
    // Read the data payload until we've received everything
    bool done = false;
    while (!done)
    {
      // Fetch the data payload
      done = radio.read( joystick, sizeof(joystick) );
      
      servo_throttle =  map(joystick[0],0,1023,1000,2000); //Throttle 1000~2000 (roll pitch yaw is -500~500);
      servo_yaw   = map(joystick[1],0,1023,-500,500);
      servo_pitch = map(joystick[2],0,1023,-500,500);
      servo_roll  = map(joystick[3],0,1023,-500,500);
      /*
      OCR3B = (servo_throttle - servo_roll + servo_pitch - servo_yaw)<<4 - 16000; //pin 2
      OCR3C = (servo_throttle - servo_roll - servo_pitch + servo_yaw)<<4 - 16000; //pin 3
      OCR3A = (servo_throttle + servo_roll + servo_pitch + servo_yaw)<<4 - 16000; //pin 5
      OCR4A = (servo_throttle + servo_roll - servo_pitch - servo_yaw)<<4 - 16000; //pin 6
      */
      
      
      temp =  map(joystick[0],0,1023,12000,16350);
      OCR3B = temp;
      OCR3A = temp; 
      OCR3C = temp;
      OCR4A = temp; 
      
    }
  }
  else
  {   
      Serial.println("No radio available");
  }
}//--(end main loop )---
